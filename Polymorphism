//Polymorphism Dominik Gierecki

#include <iostream>
using namespace std;

//Defining Classes

class Figure
{
protected:
    float Area = 10;

public:
    virtual void CalculateArea() = 0;
    virtual void ShowArea()
    {
        cout << "Area of Figure is: " << Area << "\n";
    }
};

class Square : public Figure
{
    float Side;

public:
    Square(float s = 1)
    {
        Side = s;
    }

    virtual void CalculateArea()
    {
        Area = (Side*Side);
    }

    virtual void ShowArea()
    {
        cout << "Square Area is: " << Area << "\n";
    }


};


class Circle :public Figure
{
    float Radius;

public:
    Circle(float R = (1 / 3.1415f))
    {
        Radius = R;
    }

    virtual void CalculateArea()
    {
        Area = (3.1415f * Radius * Radius);

    }

    virtual void ShowArea()
    {
        {
            cout << "Circle Area is: " << Area <<"\n";
        }
    }
};

class Triangle : public Figure
{
    float Base;
    float Height;

public:
    Triangle(float b = 1.0, float h = 2.0)
    {
        Base = b;
        Height = h;
    }

    virtual void CalculateArea()
    {
        Area = (Base * Height) / 2;
    }

    virtual void ShowArea()
    {    
            cout << "Triangle Area is: " << Area << "\n";
    }
};


int main()
{
    //Enter Parameters for which to calculate Area of given Figure
    Square square(1.41421356237);
    Circle circle(0.9);
    Triangle triangle(2, 3);


    Figure* Array[3];
    Array[0] = &square;
    Array[1] = &circle;
    Array[2] = &triangle;
    
    for (int Counter = 0; Counter <= 2; Counter++)
    {
        Array[Counter]->CalculateArea();
        Array[Counter]->ShowArea();

    }
    return 0;
}
